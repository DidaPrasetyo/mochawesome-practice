{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-02T07:46:10.297Z",
    "end": "2024-05-02T07:46:10.312Z",
    "duration": 15,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d1491356-45a5-44a4-b0f9-48e788ad44d6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cac6361f-d30c-4fc6-8e06-30d43e915700",
          "title": "Fitur menghitung huruf a",
          "fullFile": "D:\\Work\\ProSigmaka\\Bootcamp\\mochawesome\\specs\\negatif.spec.js",
          "file": "\\specs\\negatif.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fa2cceab-b995-4b4e-ba91-cbc18c68cf73",
              "title": "Negatif",
              "fullFile": "D:\\Work\\ProSigmaka\\Bootcamp\\mochawesome\\specs\\negatif.spec.js",
              "file": "\\specs\\negatif.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "input kosong, hasilnya TypeError",
                  "fullTitle": "Fitur menghitung huruf a Negatif input kosong, hasilnya TypeError",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = () => repeatString()\nexpect(hasil).to.throw(TypeError)",
                  "err": {},
                  "uuid": "a7d1a006-7601-41e6-bc23-1b4b2de83994",
                  "parentUUID": "fa2cceab-b995-4b4e-ba91-cbc18c68cf73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "input aac dan 10, hasilnya TypeError",
                  "fullTitle": "Fitur menghitung huruf a Negatif input aac dan 10, hasilnya TypeError",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = () => repeatString(10, 'aac')\nexpect(hasil).to.throw(TypeError)",
                  "err": {},
                  "uuid": "4a7c30ba-1e3e-4e5b-aceb-855c5e491655",
                  "parentUUID": "fa2cceab-b995-4b4e-ba91-cbc18c68cf73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "input aac dan aab, hasilnya AssertionError",
                  "fullTitle": "Fitur menghitung huruf a Negatif input aac dan aab, hasilnya AssertionError",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = repeatString('aac', 'aab')\nexpect(hasil).to.be.NaN",
                  "err": {},
                  "uuid": "d0e16b7a-5435-48a6-a495-65c1c9a7f5a5",
                  "parentUUID": "fa2cceab-b995-4b4e-ba91-cbc18c68cf73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "input 10 dan 100, hasilnya TypeError",
                  "fullTitle": "Fitur menghitung huruf a Negatif input 10 dan 100, hasilnya TypeError",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = () => repeatString(10, 100)\nexpect(hasil).to.throw(TypeError)",
                  "err": {},
                  "uuid": "4c0a2e37-42b3-4291-82f8-861740d35382",
                  "parentUUID": "fa2cceab-b995-4b4e-ba91-cbc18c68cf73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "input string 10 dan string 100, hasilnya AssertionError",
                  "fullTitle": "Fitur menghitung huruf a Negatif input string 10 dan string 100, hasilnya AssertionError",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = repeatString('10', '100')\nexpect(hasil).to.equal(+0)",
                  "err": {},
                  "uuid": "905b225c-7520-40a8-afba-6c1e127f921c",
                  "parentUUID": "fa2cceab-b995-4b4e-ba91-cbc18c68cf73",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7d1a006-7601-41e6-bc23-1b4b2de83994",
                "4a7c30ba-1e3e-4e5b-aceb-855c5e491655",
                "d0e16b7a-5435-48a6-a495-65c1c9a7f5a5",
                "4c0a2e37-42b3-4291-82f8-861740d35382",
                "905b225c-7520-40a8-afba-6c1e127f921c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0e3f2f70-1b35-4eb3-9168-97b37854f9af",
          "title": "Fitur menghitung huruf a",
          "fullFile": "D:\\Work\\ProSigmaka\\Bootcamp\\mochawesome\\specs\\positif.spec.js",
          "file": "\\specs\\positif.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "15f23a54-208b-47dd-9344-a5f31539bbe8",
              "title": "Positif",
              "fullFile": "D:\\Work\\ProSigmaka\\Bootcamp\\mochawesome\\specs\\positif.spec.js",
              "file": "\\specs\\positif.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "input 10 dan aac, hasilnya bertipe number",
                  "fullTitle": "Fitur menghitung huruf a Positif input 10 dan aac, hasilnya bertipe number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = repeatString('aac', 10)\nexpect(hasil).to.be.a('number')",
                  "err": {},
                  "uuid": "4188a105-236b-44aa-888e-0d8af96ebd9e",
                  "parentUUID": "15f23a54-208b-47dd-9344-a5f31539bbe8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "input a dan 1000000000000, hasilnya 1000000000000",
                  "fullTitle": "Fitur menghitung huruf a Positif input a dan 1000000000000, hasilnya 1000000000000",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = repeatString('a', 1000000000000)\nexpect(hasil).to.equal(1000000000000)",
                  "err": {},
                  "uuid": "b4b50edf-db02-4038-a881-82fb2db4a4a2",
                  "parentUUID": "15f23a54-208b-47dd-9344-a5f31539bbe8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "input aba dan 10, hasilnya 7",
                  "fullTitle": "Fitur menghitung huruf a Positif input aba dan 10, hasilnya 7",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = repeatString('aba', 10)\nexpect(hasil).to.equal(7)",
                  "err": {},
                  "uuid": "a68e9ac4-4474-4b3d-9799-4a13f56c28af",
                  "parentUUID": "15f23a54-208b-47dd-9344-a5f31539bbe8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "input aadcdaccacabdaabadadaabacdcbcacabbbadbdadacbdadaccbbadbdcadbdcacacbcacddbcbbbaaccbaddcabaacbcaabbaaa dan 942885108885, hasilnya 330009788107",
                  "fullTitle": "Fitur menghitung huruf a Positif input aadcdaccacabdaabadadaabacdcbcacabbbadbdadacbdadaccbbadbdcadbdcacacbcacddbcbbbaaccbaddcabaacbcaabbaaa dan 942885108885, hasilnya 330009788107",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = repeatString('aadcdaccacabdaabadadaabacdcbcacabbbadbdadacbdadaccbbadbdcadbdcacacbcacddbcbbbaaccbaddcabaacbcaabbaaa', 942885108885)\nexpect(hasil).to.equal(330009788107)",
                  "err": {},
                  "uuid": "188c7c2a-3b88-4ae5-ab35-353f9e229652",
                  "parentUUID": "15f23a54-208b-47dd-9344-a5f31539bbe8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "input d dan 590826798023, hasilnya 0",
                  "fullTitle": "Fitur menghitung huruf a Positif input d dan 590826798023, hasilnya 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const hasil = repeatString('d', 590826798023)\nexpect(hasil).to.equal(0)",
                  "err": {},
                  "uuid": "c26228d5-0e9d-4867-b944-2102d3c0c8c5",
                  "parentUUID": "15f23a54-208b-47dd-9344-a5f31539bbe8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4188a105-236b-44aa-888e-0d8af96ebd9e",
                "b4b50edf-db02-4038-a881-82fb2db4a4a2",
                "a68e9ac4-4474-4b3d-9799-4a13f56c28af",
                "188c7c2a-3b88-4ae5-ab35-353f9e229652",
                "c26228d5-0e9d-4867-b944-2102d3c0c8c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]_[status]-[name]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test_result",
        "reportFilename": "[datetime]_[status]-[name]-report",
        "timestamp": "yyyy-mm-dd HH:MM:ss"
      },
      "version": "6.2.0"
    }
  }
}